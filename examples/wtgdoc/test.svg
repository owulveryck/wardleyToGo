<svg width="100%" height="100%" viewBox="0 0 1100 900" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid meet">
    <defs>
        <linearGradient id="wardleyGradient" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" stop-color="rgb(236,237,243)"></stop>
            <stop offset="30%" stop-color="rgb(255,255,255)"></stop>
            <stop offset="70%" stop-color="rgb(255,255,255)"></stop>
            <stop offset="100%" stop-color="rgb(236,237,243)"></stop>
        </linearGradient>
        <marker id="arrow" refX="15" refY="0" markerWidth="12" markerHeight="12" viewBox="0 -5 10 10">
            <path d="M0,-5L10,0L0,5" fill="rgb(255,0,0)"></path>
        </marker>
        <marker id="graphArrow" refX="9" refY="0" markerWidth="12" markerHeight="12" viewBox="0 -5 10 10">
            <path d="M0,-5L10,0L0,5" fill="rgb(0,0,0)"></path>
        </marker>
    </defs>
    <rect x="30" y="50" width="1040" height="800" style="fill:url(#wardleyGradient)"></rect>
    <g transform=" translate(30,850) rotate(270)">
        <line x1="0" y1="0" x2="800" y2="0" stroke-width="1" marker-end="url(#graphArrow)" stroke="rgb(19,36,84)" stroke-opacity="1.0"></line>
        <line x1="0" y1="180" x2="800" y2="180" stroke-width="1" stroke-dasharray="2 2" stroke="rgb(19,36,84)" stroke-opacity="1.0"></line>
        <line x1="0" y1="416" x2="800" y2="416" stroke-width="1" stroke-dasharray="2 2" stroke="rgb(19,36,84)" stroke-opacity="1.0"></line>
        <line x1="0" y1="728" x2="800" y2="728" stroke-width="1" stroke-dasharray="2 2" stroke="rgb(19,36,84)" stroke-opacity="1.0"></line>
        <text fill="rgb(19,36,84)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="start">
            <tspan x="5" dy="-10">Invisible</tspan>
        </text>
        <text fill="rgb(19,36,84)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="end">
            <tspan x="795" dy="-10">Visible</tspan>
        </text>
        <text fill="rgb(19,36,84)" fill-opacity="1.0" font-weight="bold" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="middle">
            <tspan x="400" dy="-10">Value Chain</tspan>
        </text>
    </g>
    <line x1="30" y1="850" x2="1070" y2="850" marker-end="url(#graphArrow)" stroke="rgb(19,36,84)" stroke-opacity="1.0"></line>
    <g id="visibilitytoggle_0" onclick="toggleVisibility()">
        <circle cx="135" cy="885" r="5"></circle>
        <text fill="rgb(19,36,84)" fill-opacity="1.0" font-weight="bold" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" font-size="11px" text-anchor="start">
            <tspan x="142" dy="889">Toggle visibility</tspan>
        </text>
    </g>
    <g id="linktoggle_0" onclick="toggleLinks()">
        <circle cx="35" cy="885" r="5"></circle>
        <text fill="rgb(19,36,84)" fill-opacity="1.0" font-weight="bold" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" font-size="11px" text-anchor="start">
            <tspan x="42" dy="889">Toggle links</tspan>
        </text>
    </g>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-weight="bold" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" font-size="11px" text-anchor="start">
        <tspan x="37" dy="65">Uncharted</tspan>
    </text>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-weight="bold" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" font-size="11px" text-anchor="end">
        <tspan x="1065" dy="65">Industrialised</tspan>
    </text>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif">
        <tspan x="30" dy="865">Genesis</tspan>
    </text>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif">
        <tspan x="210" dy="865">Custom-Built</tspan>
    </text>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif">
        <tspan x="446" dy="865">Product
(+rental)</tspan>
    </text>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif">
        <tspan x="758" dy="865">Commodity
(+utility)</tspan>
    </text>
    <text fill="rgb(19,36,84)" fill-opacity="1.0" font-weight="bold" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="end">
        <tspan x="1070" dy="865">Evolution</tspan>
    </text>
    <style><![CDATA[
.evolutionEdge {
	stroke-dasharray: 7;
	stroke-dashoffset: 7;
	animation: dash 3s linear forwards infinite;
}


.visibility0 {
	opacity: 0.8;
}

.visibility1 {
	opacity: 0.8;
}



.invisibility0 {
	opacity: 1.00;
}

.invisibility1 {
	opacity: 0.20;
}


@keyframes dash {
	from {
		stroke-dashoffset: 100;
	}
	to {
		stroke-dashoffset: 0;
	}
}
.componentText {
  background: transparent;
  color: #fff;
  resize: none;
  border: 0 none;
  width: 100%;
  font-size: 0.8em;
  outline: none;
  height: 100%;
  position: absolute;
}

]]></style>
    <script id="SVGScript">var g = new Map();
var allLinks = new Array(); 

allLinks.push('edge_0_1',);

g.set('element_0',Array('edge_0_1',));

const max = 9
function toggleLink(clicked_id)
{
	if (g.has(clicked_id)) {
		g.get(clicked_id).forEach(element => {
			var style = document.getElementById(element).style.display;
			if(style === "none")
				document.getElementById(element).style.display = "block";
			else
				document.getElementById(element).style.display = "none";

		});
	}
}
function toggleLinks() {
	allLinks.forEach(element => {
		var style = document.getElementById(element).style.display;
		if(style === "none") {
			document.getElementById(element).style.display = "block";
		} else {
			document.getElementById(element).style.display = "none";
		}
	});
}

var allVisibilities = new Map();
var allInVisibilities = new Map();
function setVisibility() {
	
	allVisibilities.set('invisibility0',document.querySelectorAll('.visibility0'))
	allInVisibilities.set('visibility0',document.querySelectorAll('.invisibility0'))
	allVisibilities.set('invisibility1',document.querySelectorAll('.visibility1'))
	allInVisibilities.set('visibility1',document.querySelectorAll('.invisibility1'))
}

var visible = true

function toggleVisibility() {
	components = allVisibilities
	if (visible) {
		components = allInVisibilities
		visible = false
	} else {
		visible = true
	}
	components.forEach(function(value, key) {
		if (value.length === 0) {
			setVisibility();
		}
		value.forEach(element => {
			element.classList.toggle(key)	
		});
	})
}


setVisibility();
</script>
    <text font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="middle">
        <tspan x="550" dy="20">canvas</tspan>
    </text>
    <g id="layer_0">
        <g id="edge_0_1" class="visibility1">
            <line x1="342" y1="74" x2="342" y2="826" stroke-width="1" class="" stroke="rgb(128,128,128)" stroke-opacity="1.0"></line>
        </g>
    </g>
    <g id="layer_10">
        <g id="element_0" onclick="toggleLink(this.id)" class="visibility0">
            <g transform=" translate(342,74)">
                <circle cx="0" cy="0" r="5" fill="rgb(255,255,255)" fill-opacity="1.0" stroke="rgb(0,0,0)" stroke-opacity="1.0" stroke-width="1"></circle>
                <text fill="rgb(0,0,0)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="middle">
                    <tspan x="0" dy="-10">user</tspan>
                </text>
                <title> user</title>
            </g>
        </g>
        <g id="element_1" onclick="toggleLink(this.id)" class="visibility1">
            <g transform=" translate(342,826)">
                <circle cx="0" cy="0" r="5" fill="rgb(255,255,255)" fill-opacity="1.0" stroke="rgb(0,0,0)" stroke-opacity="1.0" stroke-width="1"></circle>
                <text fill="rgb(0,0,0)" fill-opacity="1.0" font-family="Century Gothic,CenturyGothic,AppleGothic,sans-serif" text-anchor="end">
                    <tspan x="-10" dy="6">need</tspan>
                </text>
                <title> need
 super</title>
            </g>
        </g>
    </g>
</svg>